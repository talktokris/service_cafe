name: Deploy to cPanel

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Serve Cafe to cPanel

    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@v4

      - name: 🐘 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, dom, fileinfo, mysql, pdo, pdo_mysql, bcmath, gd, zip
          coverage: none

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: 📥 Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: 💾 Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: 🎼 Install Composer dependencies
        run: composer install --no-dev --optimize-autoloader --no-interaction --prefer-dist

      - name: 📦 Install Node dependencies
        run: npm ci

      - name: 🎨 Build assets
        run: npm run build

      - name: 🧪 Run tests (optional)
        run: |
          if [ -f "phpunit.xml" ]; then
            php artisan test || true
          fi

      - name: 📊 Display deployment info
        run: |
          echo "🚀 Deploying to cPanel..."
          echo "📂 Branch: ${{ github.ref_name }}"
          echo "👤 Triggered by: ${{ github.actor }}"
          echo "📝 Commit: ${{ github.sha }}"

      - name: 🚀 Deploy to cPanel via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.CPANEL_HOST }}
          username: ${{ secrets.CPANEL_USERNAME }}
          key: ${{ secrets.CPANEL_SSH_KEY }}
          port: ${{ secrets.CPANEL_PORT || 22 }}
          script: |
            echo "🔍 Starting deployment process..."

            # Navigate to project directory
            cd /home4/servi5ne/repositories/service_cafe || exit 1

            # Create backup
            echo "📦 Creating backup..."
            BACKUP_DIR="/home4/servi5ne/backups"
            mkdir -p $BACKUP_DIR
            tar -czf "$BACKUP_DIR/backup-$(date +%Y%m%d-%H%M%S).tar.gz" . 2>/dev/null || true

            # Pull latest changes
            echo "📥 Pulling latest changes..."
            git fetch origin main
            git reset --hard origin/main

            # Install PHP dependencies
            echo "🎼 Installing Composer dependencies..."
            composer install --no-dev --optimize-autoloader --no-interaction

            # Build assets (if npm available)
            if command -v npm &> /dev/null; then
              echo "🎨 Building assets..."
              npm install --silent
              npm run build
            fi

            # Set permissions
            echo "🔐 Setting permissions..."
            chmod -R 755 .
            chmod -R 775 storage bootstrap/cache

            # Clear Laravel caches
            echo "🧹 Clearing caches..."
            php artisan config:clear
            php artisan route:clear
            php artisan view:clear
            php artisan cache:clear

            # Rebuild caches
            echo "🔄 Rebuilding caches..."
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            # Run migrations (if needed)
            echo "🗄️ Running migrations..."
            php artisan migrate --force || true

            # Update symlink
            echo "🔗 Updating symlink..."
            ln -sfn "$(pwd)/public" "/home4/servi5ne/public_html/sys/app/public"

            # Clean old backups (keep last 5)
            echo "🧹 Cleaning old backups..."
            ls -t $BACKUP_DIR/backup-*.tar.gz 2>/dev/null | tail -n +6 | xargs -r rm

            # Test application
            echo "🧪 Testing application..."
            php artisan route:list > /dev/null 2>&1 && echo "✅ Application test passed" || echo "⚠️ Application test failed"

            # Restore cron jobs after deployment
            echo "🔄 Restoring cron jobs..."
            if [ -f "/home4/servi5ne/cron_backup.txt" ]; then
              crontab /home4/servi5ne/cron_backup.txt
              echo "✅ Cron jobs restored successfully"
            else
              echo "⚠️ No cron backup found, adding essential cron jobs..."
              # Add essential cron jobs if backup doesn't exist
              (crontab -l 2>/dev/null; echo "* * * * * curl -s https://servecafe.com/cron/activate-member-package") | crontab -
              (crontab -l 2>/dev/null; echo "* * * * * curl -s https://servecafe.com/cron/leadership-chaque-match") | crontab -
              (crontab -l 2>/dev/null; echo "0 3 1 1,4,7,10 * curl -s https://servecafe.com/cron/global-pool-distribution") | crontab -
              echo "✅ Essential cron jobs added"
            fi

            echo "✅ Deployment completed successfully!"

      - name: 🎉 Deployment Success
        if: success()
        run: |
          echo "✅ Deployment completed successfully!"
          echo "🌐 Application is available at: https://servecafe.com"

      - name: ❌ Deployment Failed
        if: failure()
        run: |
          echo "❌ Deployment failed!"
          echo "Please check the logs above for errors."
